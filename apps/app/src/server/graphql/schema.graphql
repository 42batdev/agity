type Query {
    getUserProfile: Profile
    getTeam(tid: String!): Team
}

type Mutation {
    createUserProfile (input: CreateUserProfileInput!): Profile
    updateUserProfile(input: UpdateProfileInput!): Profile

    createTeam (input: CreateTeamInput!): Team
}

type Profile {
    id: ID!
    uid: String!
    name: String!
    avatar: Avatar
    teams: [Team!]
}

type Avatar {
    url: String
    filename: String
}

type Team {
    id: ID!
    tid: String!
    name: String!
    myPermissions: TeamPermission!
}

type TeamPermission {
    permissionLevel: PermissionLevel!
}

enum PermissionLevel {
    OWNER, MEMBER
}

input CreateUserProfileInput {
    uid: String!
    name: String
}

input UpdateProfileInput {
    uid: String
    name: String
    avatar: AvatarInput
}

input AvatarInput {
    filename: String
}

input CreateTeamInput {
    tid: String!
    name: String
}